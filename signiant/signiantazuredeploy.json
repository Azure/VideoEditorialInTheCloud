{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure location where the resources are deployed.  If blank, variables('location') is used."
      }
    },
    "workstationName": {
      "type": "string",
      "metadata": {
        "description": "Workstation name must be 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified reference to the subnet of the Avere vFXT cluster.  Example /subscriptions/SUBSCRIPTION/resourceGroups/RESOURCEGROUP/providers/Microsoft.Network/virtualNetworks/NETWORK_NAME/subnets/SUBNET_NAME."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
      "description": "Size of the VM."
      }
    },
    "signiantKey": {
      "type": "string",
      "metadata": {
        "description": "Signiant Registration Key"
      }
    },
    "_githubLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where github artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "signiantInstallName": {
      "type": "string",
      "metadata": {
        "description": "Signiant Install File Name"
      }
    },
    "avidNexisClientInstallName": {
      "type": "string",
      "metadata": {
        "description": "Avid Nexis Client Install Name"
      }
    }
  },
  "variables": {
    "uniqueName": "[parameters('workstationName')]",
    "subnetId": "[parameters('subnetId')]",
    "location": "[parameters('location')]",
    "vmSize": "[parameters('vmSize')]",
    "nicName": "[concat(variables('uniqueName'),'-sig-nic')]",
    "publicIPAddressName": "[concat(variables('uniqueName'),'-sig-ip')]",
    "vmName": "[concat(variables('uniqueName'),'-sig-vm')]",
    "networkSecurityGroupName": "[concat(variables('uniqueName'),'-sig-nsg')]",
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "scriptFileName": "installSigniant.sh",
    "signiantInstallName":"[parameters('signiantInstallName')]",
    "avidNexisClientInstallName":"[parameters('avidNexisClientInstallName')]",
    "signiantKey":"[trim(parameters('signiantKey'))]",
    "scriptLocation": "[concat(parameters('_githubLocation'), '/','scripts')]",
    "signiantInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('signiantInstallName'))]",
    "avidNexisClentInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('avidNexisClientInstallName'))]",
    "networkSecurityGroupRules": [
      {
        "name": "RemoteAccessRDP",
        "properties": {
          "priority": 100,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "3389"
        }
      },
      {
        "name": "RemoteAccessSSH",
        "properties": {
          "priority": 110,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "22"
        }
      },
      {
        "name": "Allow-80-In",
        "properties": {
          "priority": 200,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "80"
        }
      },
      {
        "name": "Allow-80-Out",
        "properties": {
          "priority": 205,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Outbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "80"
        }
      },
      {
        "name": "Allow-8080",
        "properties": {
          "priority": 210,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "8080"
        }
      },
      {
        "name": "Allow-TCP-49221-In",
        "properties": {
          "priority": 215,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "49221"
        }
      },
      {
        "name": "Allow-TCP-49221-Out",
        "properties": {
          "priority": 220,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Outbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "49221"
        }
      },
      {
        "name": "Shuttle-UDP",
        "properties": {
          "priority": 300,
          "protocol": "UDP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "49221-49321"
        }
      },
      {
        "name": "Allow-TCP-49321-In",
        "properties": {
          "priority": 230,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "49321"
        }
      },
      {
        "name": "Allow-TCP-49321-Out",
        "properties": {
          "priority": 250,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "49321"
        }
      },
      {
        "name": "Allow-TCP-50221-In",
        "properties": {
          "priority": 235,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "50221"
        }
      },
      {
        "name": "Allow-TCP-50221-Out",
        "properties": {
          "priority": 240,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Outbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "50221"
        }
      },
      {
        "name": "Allow-TCP-443-Out",
        "properties": {
          "priority": 245,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Outbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "443"
        }
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRules')]"
      },
      "tags": {}
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[variables('nicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.5",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "name": "[concat(variables('vmName'),'-os-disk')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[variables('location')]",
      "name": "[concat(concat(variables('vmName'),'/create.Signiant.v1.0.0'))]",
      "dependsOn": [
        "[variables('vmName')]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {

        },
        "protectedSettings": {
          "fileUris": [
            "[concat(variables('scriptLocation'), '/',variables('scriptFileName'))]"
          ],
          "commandToExecute": "[concat('sh ',variables('scriptFileName'),' ',variables('signiantInstallLocation'),' ',variables('signiantKey'),' ',variables('avidNexisClentInstallLocation'))]"
        }
      }
    }
  ],
  "outputs": {
    "Signiamt-IPAddress": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName'), '2016-03-30').IPaddress]"
    }
  }
}