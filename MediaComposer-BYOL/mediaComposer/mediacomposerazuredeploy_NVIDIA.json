{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "workstationName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "teradiciKey": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "numberOfInstances": {
      "type": "int"
    },
    "subnetId": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_githubLocation": {
      "type": "string"
    },
    "mediaComposerFileName": {
      "type": "string"
    },
    "teradiciInstallFileName": {
      "type": "string"
    },
    "nvidiaInstallFileName": {
      "type": "string"
    },
    "nexisClientInstallFileName": {
      "type": "string"
    }
  },
  "variables": {
    "adminPassword": "[parameters('adminPassword')]",
    "adminUsername": "[parameters('adminUsername')]",
    "createNic?": true,
    "imageReference": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2016-Datacenter",
      "version": "latest"
    },
    "location": "[parameters('location')]",
    "uniqueName": "[concat(parameters('workstationName'), '-mc')]",
    "networkSecurityGroupName": "[concat(parameters('workstationName'),'-mc-nsg')]",
    "nicName": "[concat(variables('uniqueName'), '-nic')]",
    "numberOfInstances": "[parameters('numberOfInstances')]",
    "publicIPAddressName": "[concat(variables('uniqueName'), '-ip')]",
    "subnetId": "[parameters('subnetId')]",
    "teradiciKey": "[trim(parameters('teradiciKey'))]",
    "vmName": "[concat(variables('uniqueName'), '-vm')]",
    "vmSize": "[parameters('vmSize')]",
    "scriptFolder": ".",
    "scriptFileName": "setupMediaComposer_NVIDIA.ps1",
    "mediaComposerFileName": "[parameters('mediaComposerFileName')]",
    "teradiciInstallFileName": "[parameters('teradiciInstallFileName')]",
    "nvidiaInstallFileName": "[parameters('nvidiaInstallFileName')]",
    "nexisClientInstallFileName": "[parameters('nexisClientInstallFileName')]",
    "scriptLocation": "[concat(parameters('_githubLocation'), '/','scripts')]",
    "mediaComposerInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('mediaComposerFileName'))]",
    "teradiciInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('teradiciInstallFileName'))]",
    "nvidiaInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('nvidiaInstallFileName'))]",
    "nexisClientInstallLocation": "[concat(parameters('_artifactsLocation'), '/','installers','/',variables('nexisClientInstallFileName'))]",
    "scriptParameters": "[concat('-TeradiciKey ', variables('teradiciKey'),' -MediaComposerURL ', variables('mediaComposerInstallLocation'),' -TeradiciURL ', variables('teradiciInstallLocation'),' -NvidiaURL ', variables('nvidiaInstallLocation'),' -AvidNEXISClientURL ', variables('nexisClientInstallLocation'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-bc1e25ec-4990-4a2d-a035-a332bebc3ded",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),padLeft(copyindex(1),2,'0'))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "publicIPLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "condition": "[variables('createNic?')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), padLeft(copyindex(1),2,'0'))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "publicIPLoop"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), padLeft(copyindex(1),2,'0')))]"
              },
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(variables('networkSecurityGroupName')))]"
        }
      }
    },
    {
      "apiVersion": "2017-12-01",
      "tags": {
        "avid": "mediacomposer"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),  padLeft(copyindex(1),2,'0'))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), padLeft(copyindex(1),2,'0'))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(variables('uniqueName'), '-os-disk', padLeft(copyindex(1),2,'0'))]",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), padLeft(copyindex(1),2,'0')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(concat(variables('vmName'),  padLeft(copyindex(1),2,'0')),'/create.avid.mediacomposer.v0.3.0')]",
      "apiVersion": "2017-12-01",
      "location": "[variables('location')]",
      "copy": {
        "name": "extensionLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptLocation'), '/',variables('scriptFileName'))]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'), ' ', variables('scriptParameters'))]"
        }
      }
    }
  ],
  "outputs": {
    "resource_group": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[variables('location')]"
    },
    "subnet_id": {
      "type": "string",
      "value": "[variables('subnetId')]"
    }
  }
}