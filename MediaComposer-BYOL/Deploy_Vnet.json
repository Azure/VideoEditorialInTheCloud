{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"general-NamePrefix": {
			"type": "string",
			"minLength": 3,
			"maxLength": 7,
			"metadata": {
				"description": "System Name prefix for all VM resources created for Cloud Edition. 3-char min, 7-char max, lower case alphanumeric. Will also be the name of the Nexis Online Cloud Storage"
			}
		},
		"general-NewOrExistingVnet": {
			"type": "string",
			"metadata": {
				"description": " New if you choose to create a new Virtual Network. Existing if you choose to use Virtual Network that has already been created. (To create a Vnet outside of this form, please go to the Azure portal and create a VNET under the resource group)"
			},
			"defaultValue": "new",
			"allowedValues": [
				"new",
				"existing"
			]
		},
		"general-VnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the new or existing Virtual Network (depending on choice above). If you chose Existing above, the name of the Vnet you enter here must match an existing Vnet, or deployment will fail"
			}
		},
		"general-VnetResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Name of the Resource Group where the existing Vnet is deployed. If you chose Existing above, this field must match the name of an existing resource group that contains the Vnet specified in the \"Vnet Name\" field. If you chose New, enter the name of the Resource Group that you're deploying to."
			}
		},
		"general-SubnetName": {
			"type": "string",
			"metadata": {
				"description": "If you chose New Vnet above, this will be the name of the new subnet in the new Vnet. If you chose Existing Vnet above, this name should match the existing subnet in that Vnet to which the VMs should be deployed, or deployment will fail"
			},
			"defaultValue": "default"
		},
		"general-AddressSpace": {
			"type": "string",
			"metadata": {
				"description": "If you chose New Vnet above, this will be the address space for the Vnet in the form X.X.X.X/Y, with Y as the subnet mask. If you chose Existing Vnet, you can ignore this field"
			},
			"defaultValue": "10.0.0.0/16"
		},
		"general-AddressSubnet": {
			"type": "string",
			"metadata": {
				"description": "If you chose New Vnet above, this will be the address subnet for the Vnet in the form X.X.X.X/Y, with Y as the subnet mask. It must be within the Address Space you configured above, or deployment will fail. If you chose Existing Vnet, you can ignore this field"
			},
			"defaultValue": "10.0.0.0/24"
		}
	},
	"variables": {
		"githubBase": "https://raw.githubusercontent.com/benjamin-ghis/VideoEditorialInTheCloud/master/MediaComposer-BYOL",
		"_buildArtifactsLocation": "[concat('https://ssengreleng.blob.core.windows.net/nexisgold/19.8.0', '/installers')]",
		"vnetTemplatelink": "[concat(variables('githubBase'),'/networking/',parameters('general-newOrExistingVnet'),'vnet.json')]",
		"signiantTemplateLink": "[concat(variables('githubBase'),'/signiant/','signiantazuredeploy.json')]"
	},
	"resources": [
		{
			"apiVersion": "2015-01-01",
			"name": "vnet-template",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetTemplatelink')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[parameters('general-vnetName')]"
					},
					"vnetResourceGroup": {
						"value": "[parameters('general-vnetResourceGroup')]"
					},
					"subnetName": {
						"value": "[parameters('general-subnetName')]"
					},
					"addressSpace": {
						"value": "[parameters('general-addressSpace')]"
					},
					"addressSubnet": {
						"value": "[parameters('general-addressSubnet')]"
					},
					"workstationName": {
						"value": "[parameters('general-namePrefix')]"
					}
				}
			}
		}
	],
	"outputs": {
		"general-namePrefix": {
			"type": "string",
			"value": "[parameters('general-namePrefix')]"
		},
		"resourceGroupName": {
			"type": "string",
			"value": "[resourceGroup().name]"
		},
		"resourceGroupLocation": {
			"type": "string",
			"value": "[resourceGroup().location]"
		},
		"vnetTemplatelink": {
			"type": "string",
			"value": "[variables('vnetTemplatelink')]"
		},
		"vnet-template": {
			"type": "string",
			"value": "[reference('vnet-template').outputs.subnetRef.value]"
		}
	}
}
